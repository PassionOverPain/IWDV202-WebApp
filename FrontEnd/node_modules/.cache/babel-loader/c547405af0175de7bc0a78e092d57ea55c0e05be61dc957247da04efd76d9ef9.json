{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\s227284240\\\\Desktop\\\\GitHub-Projects\\\\IWDV202-WebApp\\\\FrontEnd\\\\src\\\\components\\\\TaskManager\\\\TaskManagerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Table, Modal, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManagerDashboard = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [employees, setEmployees] = useState([]); // Added for employees list\n  const [showTaskModal, setShowTaskModal] = useState(false);\n  const [editProject, setEditProject] = useState(null);\n  const [editTask, setEditTask] = useState(null);\n  const [newProject, setNewProject] = useState({\n    projectName: \"\",\n    projectDesc: \"\",\n    projectStatus: \"To Start\",\n    // Default status\n    startDate: \"\",\n    // Added field\n    endDate: \"\" // Added field\n  });\n  const [newTask, setNewTask] = useState({\n    taskName: \"\",\n    taskDesc: \"\",\n    taskStatus: \"To Start\",\n    // Default status\n    projectId: null,\n    assignedToEmployeeId: null,\n    assignedTime: \"\",\n    completedTime: \"\"\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchProjects();\n    fetchTasks();\n    fetchEmployees(); // Fetch employees when the dashboard loads\n  }, []);\n\n  // Fetch projects from the API\n  const fetchProjects = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5220/api/projectmanager/get-projects\");\n      setProjects(response.data);\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Error fetching projects\");\n    }\n  };\n  alert();\n  // Fetch tasks from the API\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5220/api/projectmanager/get-tasks\");\n      setTasks(response.data);\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Error fetching tasks\");\n    }\n  };\n\n  // Fetch employees for task assignment\n  const fetchEmployees = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:5220/api/admin/employees\");\n      setEmployees(response.data);\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Error fetching employees\");\n    }\n  };\n  const fetchTasksByStatus = async status => {\n    try {\n      if (status == \"\") {\n        fetchTasks();\n        toast.success(\"Displaying All tasks.\");\n      } else {\n        const response = await axios.get(`http://localhost:5220/api/projectmanager/get-tasks-by-status/${status}`);\n        setTasks(response.data);\n        toast.success(\"Tasks filtered by status\");\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Error fetching tasks by status\");\n    }\n  };\n\n  // Handle Add or Edit Task\n  const handleSaveTask = async () => {\n    // Validation\n    if (!newTask.taskStatus) {\n      toast.error(\"Please fill in all required fields.\");\n      return;\n    }\n    try {\n      if (editTask) {\n        // Update Task\n        await axios.put(`http://localhost:5220/api/projectmanager/update-task/${editTask.taskId}`, newTask);\n        toast.success(\"Task updated successfully!\");\n      } else {\n        // Add Task (ID generated server-side)\n        await axios.post(\"http://localhost:5220/api/projectmanager/create-task\", newTask);\n        toast.success(\"Task added successfully!\");\n      }\n      fetchTasks();\n      handleCloseTaskModal();\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Error saving task\");\n    }\n  };\n\n  // Open modal for editing task\n  const handleEditTask = task => {\n    setEditTask(task);\n    setNewTask({\n      taskName: task.taskName,\n      taskDesc: task.taskDesc,\n      taskStatus: task.taskStatus,\n      projectId: task.projectId,\n      assignedToEmployeeId: task.assignedToEmployeeId,\n      assignedTime: task.assignedTime || \"\",\n      completedTime: task.completedTime || \"\"\n    });\n    setShowTaskModal(true);\n  };\n\n  // Handle close modal for tasks\n  const handleCloseTaskModal = () => {\n    setEditTask(null);\n    setNewTask({\n      taskName: \"\",\n      taskDesc: \"\",\n      taskStatus: \"To Start\",\n      projectId: null,\n      assignedToEmployeeId: null,\n      assignedTime: \"\",\n      completedTime: \"\"\n    });\n    setShowTaskModal(false);\n  };\n\n  // Logout function\n  const handleLogout = () => {\n    navigate(\"/\"); // Redirect to login page\n    toast.success(\"Logged out successfully\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"black\",\n        textAlign: \"center\"\n      },\n      children: \"Task Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      className: \"mb-3\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \"Filter Tasks by Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n      className: \"mb-3\",\n      onChange: e => fetchTasksByStatus(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"To Start\",\n        children: \"To Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"In Progress\",\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Assigned Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Assigned Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Completed Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map((task, index) => {\n          var _employees$find, _projects$find;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.taskName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.taskDesc\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.taskStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_employees$find = employees.find(employee => employee.employeeId === task.assignedToEmployeeId)) === null || _employees$find === void 0 ? void 0 : _employees$find.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_projects$find = projects.find(project => project.projectId === task.projectId)) === null || _projects$find === void 0 ? void 0 : _projects$find.projectName) || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.assignedTime ? new Date(task.assignedTime).toLocaleDateString() : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.completedTime ? new Date(task.completedTime).toLocaleDateString() : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"warning\",\n                className: \"me-2\",\n                onClick: () => handleEditTask(task),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, task.taskId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showTaskModal,\n      onHide: handleCloseTaskModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: editTask ? \"Edit Task\" : \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Task Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              value: newTask.taskStatus,\n              onChange: e => setNewTask({\n                ...newTask,\n                taskStatus: e.target.value\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"To Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"In Progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseTaskModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSaveTask,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskManagerDashboard, \"hSdbJ/gXuHA5+2n0g3nH/9GpSlQ=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskManagerDashboard;\nexport default TaskManagerDashboard;\nvar _c;\n$RefreshReg$(_c, \"TaskManagerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Button","Table","Modal","Form","axios","toast","useNavigate","jsxDEV","_jsxDEV","TaskManagerDashboard","_s","projects","setProjects","tasks","setTasks","employees","setEmployees","showTaskModal","setShowTaskModal","editProject","setEditProject","editTask","setEditTask","newProject","setNewProject","projectName","projectDesc","projectStatus","startDate","endDate","newTask","setNewTask","taskName","taskDesc","taskStatus","projectId","assignedToEmployeeId","assignedTime","completedTime","navigate","fetchProjects","fetchTasks","fetchEmployees","response","get","data","error","console","alert","fetchTasksByStatus","status","success","handleSaveTask","put","taskId","post","handleCloseTaskModal","handleEditTask","task","handleLogout","className","children","style","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","Select","onChange","e","target","value","striped","bordered","hover","map","index","_employees$find","_projects$find","find","employee","employeeId","name","project","Date","toLocaleDateString","show","onHide","Header","closeButton","Title","Body","Group","Label","Control","as","Footer","_c","$RefreshReg$"],"sources":["C:/Users/s227284240/Desktop/GitHub-Projects/IWDV202-WebApp/FrontEnd/src/components/TaskManager/TaskManagerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Table, Modal, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst TaskManagerDashboard = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [employees, setEmployees] = useState([]); // Added for employees list\r\n  const [showTaskModal, setShowTaskModal] = useState(false);\r\n  const [editProject, setEditProject] = useState(null);\r\n  const [editTask, setEditTask] = useState(null);\r\n\r\n  const [newProject, setNewProject] = useState({\r\n    projectName: \"\",\r\n    projectDesc: \"\",\r\n    projectStatus: \"To Start\", // Default status\r\n    startDate: \"\", // Added field\r\n    endDate: \"\", // Added field\r\n  });\r\n  const [newTask, setNewTask] = useState({\r\n    taskName: \"\",\r\n    taskDesc: \"\",\r\n    taskStatus: \"To Start\", // Default status\r\n    projectId: null,\r\n    assignedToEmployeeId: null,\r\n    assignedTime: \"\",\r\n    completedTime: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n    fetchTasks();\r\n    fetchEmployees(); // Fetch employees when the dashboard loads\r\n  }, []);\r\n\r\n  // Fetch projects from the API\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5220/api/projectmanager/get-projects\"\r\n      );\r\n      setProjects(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Error fetching projects\");\r\n    }\r\n  };\r\n\r\n  alert();\r\n  // Fetch tasks from the API\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5220/api/projectmanager/get-tasks\"\r\n      );\r\n      setTasks(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Error fetching tasks\");\r\n    }\r\n  };\r\n\r\n  // Fetch employees for task assignment\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"http://localhost:5220/api/admin/employees\"\r\n      );\r\n      setEmployees(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Error fetching employees\");\r\n    }\r\n  };\r\n\r\n  const fetchTasksByStatus = async (status) => {\r\n    try {\r\n      if (status == \"\") {\r\n        fetchTasks();\r\n        toast.success(\"Displaying All tasks.\");\r\n      } else {\r\n        const response = await axios.get(\r\n          `http://localhost:5220/api/projectmanager/get-tasks-by-status/${status}`\r\n        );\r\n        setTasks(response.data);\r\n        toast.success(\"Tasks filtered by status\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Error fetching tasks by status\");\r\n    }\r\n  };\r\n\r\n  // Handle Add or Edit Task\r\n  const handleSaveTask = async () => {\r\n    // Validation\r\n    if (!newTask.taskStatus) {\r\n      toast.error(\"Please fill in all required fields.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (editTask) {\r\n        // Update Task\r\n        await axios.put(\r\n          `http://localhost:5220/api/projectmanager/update-task/${editTask.taskId}`,\r\n          newTask\r\n        );\r\n        toast.success(\"Task updated successfully!\");\r\n      } else {\r\n        // Add Task (ID generated server-side)\r\n        await axios.post(\r\n          \"http://localhost:5220/api/projectmanager/create-task\",\r\n          newTask\r\n        );\r\n        toast.success(\"Task added successfully!\");\r\n      }\r\n      fetchTasks();\r\n      handleCloseTaskModal();\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Error saving task\");\r\n    }\r\n  };\r\n\r\n  // Open modal for editing task\r\n  const handleEditTask = (task) => {\r\n    setEditTask(task);\r\n    setNewTask({\r\n      taskName: task.taskName,\r\n      taskDesc: task.taskDesc,\r\n      taskStatus: task.taskStatus,\r\n      projectId: task.projectId,\r\n      assignedToEmployeeId: task.assignedToEmployeeId,\r\n      assignedTime: task.assignedTime || \"\",\r\n      completedTime: task.completedTime || \"\",\r\n    });\r\n    setShowTaskModal(true);\r\n  };\r\n\r\n  // Handle close modal for tasks\r\n  const handleCloseTaskModal = () => {\r\n    setEditTask(null);\r\n    setNewTask({\r\n      taskName: \"\",\r\n      taskDesc: \"\",\r\n      taskStatus: \"To Start\",\r\n      projectId: null,\r\n      assignedToEmployeeId: null,\r\n      assignedTime: \"\",\r\n      completedTime: \"\",\r\n    });\r\n    setShowTaskModal(false);\r\n  };\r\n\r\n  // Logout function\r\n  const handleLogout = () => {\r\n    navigate(\"/\"); // Redirect to login page\r\n    toast.success(\"Logged out successfully\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2 style={{ color: \"black\", textAlign: \"center\" }}>\r\n        Task Management Dashboard\r\n      </h2>\r\n      <Button variant=\"danger\" className=\"mb-3\" onClick={handleLogout}>\r\n        Logout\r\n      </Button>\r\n\r\n      {/* Task Table */}\r\n\r\n      <h6>Filter Tasks by Status</h6>\r\n      {/* Filter by Task Status */}\r\n      <Form.Select\r\n        className=\"mb-3\"\r\n        onChange={(e) => fetchTasksByStatus(e.target.value)}\r\n      >\r\n        <option value=\"\">None</option>\r\n        <option value=\"To Start\">To Start</option>\r\n        <option value=\"In Progress\">In Progress</option>\r\n        <option value=\"Completed\">Completed</option>\r\n      </Form.Select>\r\n\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Task Name</th>\r\n            <th>Description</th>\r\n            <th>Status</th>\r\n            <th>Assigned Employee</th>\r\n            <th>Project</th>\r\n            <th>Assigned Time</th>\r\n            <th>Completed Time</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks.map((task, index) => (\r\n            <tr key={task.taskId}>\r\n              <td>{index + 1}</td>\r\n              <td>{task.taskName}</td>\r\n              <td>{task.taskDesc}</td>\r\n              <td>{task.taskStatus}</td>\r\n              <td>\r\n                {\r\n                  employees.find(\r\n                    (employee) =>\r\n                      employee.employeeId === task.assignedToEmployeeId\r\n                  )?.name\r\n                }\r\n              </td>\r\n              <td>\r\n                {projects.find(\r\n                  (project) => project.projectId === task.projectId\r\n                )?.projectName || \"N/A\"}\r\n              </td>\r\n              <td>\r\n                {task.assignedTime\r\n                  ? new Date(task.assignedTime).toLocaleDateString()\r\n                  : \"N/A\"}\r\n              </td>\r\n              <td>\r\n                {task.completedTime\r\n                  ? new Date(task.completedTime).toLocaleDateString()\r\n                  : \"N/A\"}\r\n              </td>\r\n              <td>\r\n                <Button\r\n                  variant=\"warning\"\r\n                  className=\"me-2\"\r\n                  onClick={() => handleEditTask(task)}\r\n                >\r\n                  Edit\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* Task Modal */}\r\n      <Modal show={showTaskModal} onHide={handleCloseTaskModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{editTask ? \"Edit Task\" : \"Add Task\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mt-3\">\r\n              <Form.Label>Task Status</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={newTask.taskStatus}\r\n                onChange={(e) =>\r\n                  setNewTask({ ...newTask, taskStatus: e.target.value })\r\n                }\r\n              >\r\n                <option>To Start</option>\r\n                <option>In Progress</option>\r\n                <option>Completed</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseTaskModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSaveTask}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskManagerDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}